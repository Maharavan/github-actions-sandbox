name: Job artifacts 
on:
  push:
    branches:
      - main
      - 'dev-*' # dev-new dev-this-new *-> describe any other characters except slash
      - 'feat/**' # also includes slashes feat/branch feat/branc/branch
  pull_request:
    types:
      - opened
  issues:
    types:
      - assigned
  workflow_dispatch:
jobs:
  react-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node JS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependency
        id: cache-file
        uses: actions/cache@v4
        with:
          path: ~/.npm    # folder to cache
          key: dep-node-modules-${{ hashFiles('**/package-lock.json') }}          # retrieving folder on another machine/job
          restore-keys: dep-node-modules-
      - name: Install dependencies
        run:  |
              cd second-action-react-demo
              npm ci
      - name: Run tests
        run:  |
              cd second-action-react-demo
              npm test

  react-build:
    needs: react-test # depends on react-test completion else both jobs run parallel in-general
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.js_name.outputs.data }} #located inside steps and id name.value that echoed in GITHUB_OUTPUT i.e data
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node JS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependency
        id: cache-file
        uses: actions/cache@v4
        with:
          path: ~/.npm    # folder to cache
          key: dep-node-modules-${{ hashFiles('**/package-lock.json') }}          # retrieving folder on another machine/job
          restore-keys: dep-node-modules-
      - name: Install dependencies
        if: steps.cache-file.outputs.cache-hit != 'true'
        run:  |
              cd second-action-react-demo
              npm ci
      - name: Build
        run:  |
              cd second-action-react-demo
              npm run build
      - name: Publish JS filename
        id: js_name # id needed to access output name
        run:  |
              file=$(find second-action-react-demo/dist/assets -type f -name "*.js" | head -n 1)
              echo "data=$file" >> $GITHUB_OUTPUT # data is key and value {} and it will appended in special file that github holds can be appended in GITHUB_OUTPUT
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: second-action-react-demo/dist
  deploy:
    runs-on: ubuntu-latest
    needs: [react-test,react-build]
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v5
        with:
          name: output
      - name: Deploy stage
        run:  |
              echo "Deploy"
              echo "${{ needs.react-build.outputs.script-file }}"
              ls -l
  info:
    needs: [react-test,react-build,deploy]
    runs-on: ubuntu-latest
    steps:
      - name: 'Provide output information about Github' # Provides metadata info about workflow
        run: echo "${{ toJSON(github) }}"

      
